{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGiphy.js","GiphyPlayground.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","Set","placeholder","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","className","src","alt","GifGrid","imgs","loading","setData","useEffect","then","useFetchGiphy","gif","GiphyPlayground","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAACS,GAAD,mBAAoB,IAAIC,IAAJ,CAASR,GAAT,mBAAwBO,SAC3DN,EAAc,MAMlB,SACI,uBACIQ,YAAY,SACZC,KAAK,OACLC,MAAUX,EACVY,SApBW,SAACT,GACpBF,EAAcE,EAAEU,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,mGAEqFC,UAAUH,IAF/F,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAACC,GAAW,IAC5BL,EAAkBK,EAAlBL,GAAIC,EAAcI,EAAdJ,MAAOV,EAAOc,EAAPd,IAClB,OACI,sBAAKe,UAAU,kEAAf,UACI,qBAAKN,GAAIA,EAAIO,IAAKhB,EAAKiB,IAAKP,IAC5B,4BAAIA,QCHHQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDZ,SAACA,GAAc,IAAD,EAEfhB,mBAAS,CAC7BqC,KAAM,GACNC,SAAS,IAJ0B,mBAEhCf,EAFgC,KAE1BgB,EAF0B,KAiBvC,OAVAC,qBAAU,WACFzB,EAAQC,GACHyB,MAAK,SAACJ,GACHE,EAAS,CACLF,KAAMA,EACNC,SAAS,SAG1B,CAACtB,IAEGO,EDdiBmB,CAAc1B,GAA/BqB,EAF8B,EAE9BA,KAAMC,EAFwB,EAExBA,QAEb,OACI,qCACI,6BAAMtB,IACN,uBACEsB,GAAW,YAEb,qBAAKL,UAAU,UAAf,SAEQI,EAAKZ,KAAK,SAAAkB,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aEZ9CiB,EAAkB,WAAO,IAAD,EACC5C,mBAAS,IADV,mBAC5BQ,EAD4B,KAChBT,EADgB,KAGnC,OACE,gCACE,kDACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,8BAEIS,EAAWiB,KAAI,SAAET,GAAF,OACX,cAAC,EAAD,CAEEA,SAAWA,GADLA,Y,YCTtB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6bc4a3a2.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleOnChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    } \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 0){\r\n            setCategories( (categories) => [...new Set([inputValue, ...categories])] )\r\n            setInputValue('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n                placeholder='Buscar'\r\n                type='text' \r\n                value = { inputValue }\r\n                onChange = { handleOnChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes= {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=hUq37hgpUBW71UFF19Q85BmzkT062RiA&limit=10&q=${encodeURI(category)}`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = (props) => {\r\n    const {id, title, url} = props\r\n    return (\r\n        <div className=\"GifGridItem animate__animated animate__fadeIn animate__delay-1s\">\r\n            <img id={id} src={url} alt={title}/>\r\n            <p>{title}</p> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGiphy } from '../hooks/useFetchGiphy'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {    \r\n\r\n    const {imgs, loading} = useFetchGiphy(category)\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            <hr/>\r\n            { loading && 'loading..'}\r\n\r\n            <div className='GifGrid'>\r\n                {\r\n                    imgs.map( gif => <GifGridItem key={gif.id} {...gif}/> )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGiphy = (category) => {\r\n\r\n    const [data, setData] = useState({\r\n        imgs: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n            getGifs(category)\r\n                .then((imgs) => {\r\n                    setData( {\r\n                        imgs: imgs,\r\n                        loading: false\r\n                    })\r\n                })\r\n    }, [category])\r\n    \r\n    return data\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GiphyPlayground = () => {\r\n  const [categories, setCategories] = useState([])\r\n  \r\n  return (\r\n    <div>\r\n      <h1>Giphy Playground</h1>\r\n      <AddCategory setCategories = { setCategories }/>\r\n      <div>\r\n        {\r\n          categories.map(( category ) => (\r\n              <GifGrid \r\n                key={ category }\r\n                category={ category }/>\r\n            )\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GiphyPlayground } from './GiphyPlayground';\r\nimport './index.css'\r\nimport 'animate.css'\r\n\r\nReactDOM.render(\r\n  <GiphyPlayground />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}